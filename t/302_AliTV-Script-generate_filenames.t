use strict;
use warnings;

use Test::More;

BEGIN { use_ok('AliTV::Script') };

can_ok('AliTV::Script', qw(generate_filenames));

my @input = ();
my @expected = ();
my @output = ();
my $testname = "";

my @tests = (
    {
     desc          => "project given, but no YAML",
     input         => [ "testproj", undef, undef, 0, undef ],
     expected      => [ "testproj", "testproj.json", "testproj.log", "testproj.yml" ],
    },

    {
     desc          => "project and YAML given",
     input         => [ "testproj", undef, undef, 0, "testyml.yml" ],
     expected      => [ "testproj", "testproj.json", "testproj.log", "testyml.yml" ],
    },

    {
     desc          => "no project given, but YAML given",
     input         => [ undef, undef, undef, 0, "testproj.yml" ],
     expected      => [ "testproj", "testproj.json", "testproj.log", "testproj.yml" ],
    },

    {
     desc          => "no project and no YAML given",
     input         => [ undef, undef, undef, 0, undef ],
     expected      => [ "testproj", "testproj.json", "testproj.log", "testproj.yml" ],
     autogenerated => 1
    },
    );

foreach my $case (@tests)
{
    my @output = AliTV::Script::generate_filenames(@{$case->{input}});

    if (exists $case->{autogenerated})
    {
	ok($output[0] =~ /^autogen_.{7}$/, 'Autogenerated project name has expected format');
	$case->{expected} = [ $output[0], $output[0].".json", $output[0].".log", $output[0].".yml" ];
    }

    is_deeply(\@output, $case->{expected}, $case->{desc});
}

done_testing;
