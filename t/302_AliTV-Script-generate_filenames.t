use strict;
use warnings;

use Test::More;
BEGIN { use_ok('AliTV::Script') };

can_ok('AliTV::Script', qw(generate_filenames));

my @input = ();
my @expected = ();
my @output = ();
my $testname = "";

$testname = "Case 1 project given, but no YAML";
@input=("testproj", undef, undef, 0, undef);
@expected=("testproj", "testproj.json", "testproj.log", "testproj.yml");

@output = AliTV::Script::generate_filenames(@input);

is_deeply(\@output, \@expected, $testname);

$testname = "Case 2 project and YAML given";
@input=("testproj", undef, undef, 0, "testyml.yml");
@expected=("testproj", "testproj.json", "testproj.log", "testyml.yml");

@output = AliTV::Script::generate_filenames(@input);

is_deeply(\@output, \@expected, $testname);

$testname = "Case 3 no project given, but YAML given";
@input=(undef, undef, undef, 0, "testproj.yml");
@expected=("testproj", "testproj.json", "testproj.log", "testproj.yml");

@output = AliTV::Script::generate_filenames(@input);

is_deeply(\@output, \@expected, $testname);

$testname = "Case 4 no project and no YAML given";
@input=(undef, undef, undef, 0, undef);
@output = AliTV::Script::generate_filenames(@input);

ok($output[0] =~ /^autogen_.{7}$/, 'Autogenerated project name has expected format');
@expected=($output[0], $output[0].".json", $output[0].".log", $output[0].".yml");
is_deeply(\@output, \@expected, $testname);

done_testing;